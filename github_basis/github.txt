Windows PowerShell
Copyright (C) Microsoft Corporation. All rights reserved.

PS C:\Users\diksh\Desktop\git_intro> git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
Windows PowerShell
Copyright (C) Microsoft Corporation. All rights reserved.

PS C:\Users\diksh\Desktop\git_intro> git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        file01.js

nothing added to commit but untracked files present (use "git add" to track)
PS C:\Users\diksh\Desktop\git_intro> git add file01.js
PS C:\Users\diksh\Desktop\git_intro> git status
On branch master
No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

        new file:   file01.js

PS C:\Users\diksh\Desktop\git_intro> git log
fatal: your current branch 'master' does not have any commits yetPS C:\Users\diksh\Desktop\git_intro> git commit
[master (root-commit) d94f3fd] added file01.js to project
 1 file changed, 1 insertion(+) create mode 100644 file01.js
PS C:\Users\diksh\Desktop\git_intro> git log
commit d94f3fdaf66185b6696567baf9dad8b59c9082ae (HEAD -> master)
Author: diksha mittal <dikshamittal21297@gmail.com>
Date:   Mon Jun 17 15:44:17 2019 +0530
    added file01.js to project
PS C:\Users\diksh\Desktop\git_intro>
On branch master
nothing to commit, working tree clean
PS C:\Users\diksh\Desktop\git_intro> git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)

        file02.js

nothing added to commit but untracked files present (use "git add" to track)
PS C:\Users\diksh\Desktop\git_intro> git add file02.js
PS C:\Users\diksh\Desktop\git_intro> git commit -m "Add file02.js"
[master a03b79a] Add file02.js
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 file02.js
PS C:\Users\diksh\Desktop\git_intro> git og
git: 'og' is not a git command. See 'git --help'.

The most similar command is
        log
PS C:\Users\diksh\Desktop\git_intro> git log
commit a03b79a3ab2d12a1a4ef377a27e1fa1f20c6d2a9 (HEAD -> master)Author: diksha mittal <dikshamittal21297@gmail.com>
Date:   Mon Jun 17 15:53:25 2019 +0530

    Add file02.js

commit d94f3fdaf66185b6696567baf9dad8b59c9082ae
Author: diksha mittal <dikshamittal21297@gmail.com>
Date:   Mon Jun 17 15:44:17 2019 +0530

    added file01.js to project
PS C:\Users\diksh\Desktop\git_intro> git commit -m "Add file02.js"
On branch master
Changes not staged for commit:
        modified:   file02.js

no changes added to commit
PS C:\Users\diksh\Desktop\git_intro> git log --oneline
a03b79a (HEAD -> master) Add file02.js
d94f3fd added file01.js to project
PS C:\Users\diksh\Desktop\git_intro> git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   file01.js
        modified:   file02.js

no changes added to commit (use "git add" and/or "git commit -a")
PS C:\Users\diksh\Desktop\git_intro> git diff
diff --git a/file01.js b/file01.js
index 5893f9d..ea59b0f 100644
--- a/file01.js
+++ b/file01.js
@@ -1 +1,6 @@
-console.log('hello world');
\ No newline at end of file
+function greet(name){
+    console.log("hello"+name);
+
+
+}
+greet('diksha');
\ No newline at end of file
diff --git a/file02.js b/file02.js
index e69de29..6eb8246 100644
--- a/file02.js
+++ b/file02.js
...skipping...
diff --git a/file01.js b/file01.js
index 5893f9d..ea59b0f 100644
--- a/file01.js
+++ b/file01.js
@@ -1 +1,6 @@
-console.log('hello world');
\ No newline at end of file
+function greet(name){
+    console.log("hello"+name);
+
+
+}
+greet('diksha');
\ No newline at end of file
diff --git a/file02.js b/file02.js
index e69de29..6eb8246 100644
--- a/file02.js
+++ b/file02.js
@@ -0,0 +1 @@
+console.log('Hey! we are learning git')
\ No newline at end of file
~
~
~
~
~
~
~
~
~
~
~
~
~
...skipping...


                   SUMMARY OF LESS COMMANDS

      Commands marked with * may be preceded by a number, N.
      Notes in parentheses indicate the behavior if N is given.
      A key preceded by a caret indicates the Ctrl key; thus ^K is ctrl-K.

  h  H                 Display this help.
  q  :q  Q  :Q  ZZ     Exit.
 ---------------------------------------------------------------------------

                           MOVING

  e  ^E  j  ^N  CR  *  Forward  one line   (or N lines).
  y  ^Y  k  ^K  ^P  *  Backward one line   (or N lines).
  f  ^F  ^V  SPACE  *  Forward  one window (or N lines).
  b  ^B  ESC-v      *  Backward one window (or N lines).
  z                 *  Forward  one window (and set window to N).
  w                 *  Backward one window (and set window to N).

                   SUMMARY OF LESS COMMANDS

      Commands marked with * may be preceded by a number, N.
      Notes in parentheses indicate the behavior if N is given.
      A key preceded by a caret indicates the Ctrl key; thus ^K is ctrl-K.

  h  H                 Display this help.
  q  :q  Q  :Q  ZZ     Exit.
 ---------------------------------------------------------------------------

                           MOVING

  e  ^E  j  ^N  CR  *  Forward  one line   (or N lines).
  y  ^Y  k  ^K  ^P  *  Backward one line   (or N lines).
  f  ^F  ^V  SPACE  *  Forward  one window (or N lines).
  b  ^B  ESC-v      *  Backward one window (or N lines).
  z                 *  Forward  one window (and set window to N).
  w                 *  Backward one window (and set window to N).
  ESC-SPACE         *  Forward  one window, but don't stop at end-of-file.
  d  ^D             *  Forward  one half-window (and set half-window to N).
  u  ^U             *  Backward one half-window (and set half-window to N).
  ESC-)  RightArrow *  Right one half screen width (or N positions).
  ESC-(  LeftArrow  *  Left  one half screen width (or N positions).
  ESC-}  ^RightArrow   Right to last column displayed.
  ESC-{  ^LeftArrow    Left  to first column.
  F                    Forward forever; like "tail -f".
  ESC-F                Like F but stop when search pattern is found.
  r  ^R  ^L            Repaint screen.
  R                    Repaint screen, discarding buffered input.
        ---------------------------------------------------
        Default "window" is the screen height.
        Default "half-window" is half of the screen height.
 ---------------------------------------------------------------------------
HELP -- Press RETURN for more, or q when done...skipping...
diff --git a/file01.js b/file01.js
index 5893f9d..ea59b0f 100644
--- a/file01.js
+++ b/file01.js
@@ -1 +1,6 @@
-console.log('hello world');
\ No newline at end of file
+function greet(name){
+    console.log("hello"+name);
+
+
+}
+greet('diksha');
\ No newline at end of file
diff --git a/file02.js b/file02.js
index e69de29..6eb8246 100644
--- a/file02.js
+++ b/file02.js
@@ -0,0 +1 @@
+console.log('Hey! we are learning git')
\ No newline at end of file
~
~
~
~
~
~
~
~
~
~
~
~
~
...skipping...

                   SUMMARY OF LESS COMMANDS

      Commands marked with * may be preceded by a number, N.
      Notes in parentheses indicate the behavior if N is given.
      A key preceded by a caret indicates the Ctrl key; thus ^K is ctrl-K.

  h  H                 Display this help.
  q  :q  Q  :Q  ZZ     Exit.
 ---------------------------------------------------------------------------

                           MOVING

  e  ^E  j  ^N  CR  *  Forward  one line   (or N lines).
  y  ^Y  k  ^K  ^P  *  Backward one line   (or N lines).
  f  ^F  ^V  SPACE  *  Forward  one window (or N lines).
  b  ^B  ESC-v      *  Backward one window (or N lines).
  z                 *  Forward  one window (and set window to N).
  w                 *  Backward one window (and set window to N).
  ESC-SPACE         *  Forward  one window, but don't stop at end-of-file.
  d  ^D             *  Forward  one half-window (and set half-window to N).
  u  ^U             *  Backward one half-window (and set half-window to N).
  ESC-)  RightArrow *  Right one half screen width (or N positions).
  ESC-(  LeftArrow  *  Left  one half screen width (or N positions).
  ESC-}  ^RightArrow   Right to last column displayed.
  ESC-{  ^LeftArrow    Left  to first column.
  F                    Forward forever; like "tail -f".
  ESC-F                Like F but stop when search pattern is found.
  r  ^R  ^L            Repaint screen.
  R                    Repaint screen, discarding buffered input.
        ---------------------------------------------------
        Default "window" is the screen height.
        Default "half-window" is half of the screen height.
 ---------------------------------------------------------------------------

HELP -- Press RETURN for more, or q when done...skipping...
diff --git a/file01.js b/file01.js
index 5893f9d..ea59b0f 100644
--- a/file01.js
+++ b/file01.js
@@ -1 +1,6 @@
-console.log('hello world');
\ No newline at end of file
+function greet(name){
+    console.log("hello"+name);
+
+
+}
+greet('diksha');
\ No newline at end of file
diff --git a/file02.js b/file02.js
index e69de29..6eb8246 100644
--- a/file02.js
+++ b/file02.js
@@ -0,0 +1 @@
+console.log('Hey! we are learning git')
\ No newline at end of file
~
~
~
~
~
~
~
~
~
~
~
~
~
PS C:\Users\diksh\Desktop\git_intro>   git add file01.js
PS C:\Users\diksh\Desktop\git_intro> git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        modified:   file01.js

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   file02.js

PS C:\Users\diksh\Desktop\git_intro>  git add file02.js
PS C:\Users\diksh\Desktop\git_intro> git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        modified:   file01.js
        modified:   file02.js

PS C:\Users\diksh\Desktop\git_intro> git diff
PS C:\Users\diksh\Desktop\git_intro> git commit -m "greet by name"
[master 946eaa0] greet by name
 2 files changed, 7 insertions(+), 1 deletion(-)
PS C:\Users\diksh\Desktop\git_intro> git log
commit 946eaa0ed376f3f9449e9a9240683fe564382e03 (HEAD -> master)
Author: diksha mittal <dikshamittal21297@gmail.com>
Date:   Mon Jun 17 20:51:12 2019 +0530

    greet by name

commit a03b79a3ab2d12a1a4ef377a27e1fa1f20c6d2a9
Author: diksha mittal <dikshamittal21297@gmail.com>
Date:   Mon Jun 17 15:53:25 2019 +0530

    Add file02.js

commit d94f3fdaf66185b6696567baf9dad8b59c9082ae
Author: diksha mittal <dikshamittal21297@gmail.com>
Date:   Mon Jun 17 15:44:17 2019 +0530

    added file01.js to project
PS C:\Users\diksh\Desktop\git_intro> git checkout -b  gitlearning
Switched to a new branch 'gitlearning'
PS C:\Users\diksh\Desktop\git_intro> git branch
* gitlearning
  master
PS C:\Users\diksh\Desktop\git_intro> git add file02js
fatal: pathspec 'file02js' did not match any files
PS C:\Users\diksh\Desktop\git_intro> git add file02.js
PS C:\Users\diksh\Desktop\git_intro> git commit -m "more git info in file02.js"
On branch gitlearning
nothing to commit, working tree clean
PS C:\Users\diksh\Desktop\git_intro> git log --oneline
946eaa0 (HEAD -> gitlearning, master) greet by name
a03b79a Add file02.js
d94f3fd added file01.js to project
PS C:\Users\diksh\Desktop\git_intro>  git checkout master
Switched to branch 'master'
PS C:\Users\diksh\Desktop\git_intro> git log
commit 946eaa0ed376f3f9449e9a9240683fe564382e03 (HEAD -> master, gitlearning)
Author: diksha mittal <dikshamittal21297@gmail.com>
Date:   Mon Jun 17 20:51:12 2019 +0530

    greet by name

commit a03b79a3ab2d12a1a4ef377a27e1fa1f20c6d2a9
Author: diksha mittal <dikshamittal21297@gmail.com>
Date:   Mon Jun 17 15:53:25 2019 +0530

    Add file02.js

commit d94f3fdaf66185b6696567baf9dad8b59c9082ae
Author: diksha mittal <dikshamittal21297@gmail.com>
Date:   Mon Jun 17 15:44:17 2019 +0530

    added file01.js to project
PS C:\Users\diksh\Desktop\git_intro> git status
On branch master
nothing to commit, working tree clean
PS C:\Users\diksh\Desktop\git_intro> git checkout -b greeter
Switched to a new branch 'greeter'
PS C:\Users\diksh\Desktop\git_intro> git status
On branch greeter
nothing to commit, working tree clean
PS C:\Users\diksh\Desktop\git_intro>  git status
On branch greeter
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   file01.js
        modified:   file02.js

no changes added to commit (use "git add" and/or "git commit -a")
PS C:\Users\diksh\Desktop\git_intro> add *.js
add : The term 'add' is not recognized as the name of a cmdlet, function, script file, or 
operable program. Check the spelling of the name, or if a path was included, verify that the 
path is correct and try again.
At line:1 char:1
+ add *.js
+ ~~~
    + CategoryInfo          : ObjectNotFound: (add:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
 
PS C:\Users\diksh\Desktop\git_intro> git add *.js
PS C:\Users\diksh\Desktop\git_intro>  git commit -m "sheldon greeter"
[greeter 8723fad] sheldon greeter
 2 files changed, 6 insertions(+), 2 deletions(-)
PS C:\Users\diksh\Desktop\git_intro> git log
commit 8723fad908650d4c1074c4256845a21ed31edaff (HEAD -> greeter)
Author: diksha mittal <dikshamittal21297@gmail.com>
Date:   Mon Jun 17 21:04:31 2019 +0530

    sheldon greeter

commit 946eaa0ed376f3f9449e9a9240683fe564382e03 (master, gitlearning)
Author: diksha mittal <dikshamittal21297@gmail.com>
Date:   Mon Jun 17 20:51:12 2019 +0530

    greet by name

commit a03b79a3ab2d12a1a4ef377a27e1fa1f20c6d2a9
Author: diksha mittal <dikshamittal21297@gmail.com>
Date:   Mon Jun 17 15:53:25 2019 +0530

    Add file02.js

commit d94f3fdaf66185b6696567baf9dad8b59c9082ae
Author: diksha mittal <dikshamittal21297@gmail.com>
Date:   Mon Jun 17 15:44:17 2019 +0530

    added file01.js to project
PS C:\Users\diksh\Desktop\git_intro> git branch
  gitlearning
* greeter
  master
PS C:\Users\diksh\Desktop\git_intro> git merge gitlearning
Already up to date.
PS C:\Users\diksh\Desktop\git_intro> git checkout -b gitlearning
fatal: A branch named 'gitlearning' already exists.
PS C:\Users\diksh\Desktop\git_intro> git checkout -b greeter
fatal: A branch named 'greeter' already exists.
PS C:\Users\diksh\Desktop\git_intro> git checkout -b trying branch
fatal: 'branch' is not a commit and a branch 'trying' cannot be created from it
PS C:\Users\diksh\Desktop\git_intro> git merge gitlearning
Already up to date.
PS C:\Users\diksh\Desktop\git_intro> git log --oneline --color --graph --decorate
* 8723fad (HEAD -> greeter) sheldon greeter
* 946eaa0 (master, gitlearning) greet by name
* a03b79a Add file02.js
* d94f3fd added file01.js to project
PS C:\Users\diksh\Desktop\git_intro> git log --oneline --color --graph --decorate
* 8723fad (HEAD -> greeter) sheldon greeter
* 946eaa0 (master, gitlearning) greet by name
* a03b79a Add file02.js
* d94f3fd added file01.js to project
PS C:\Users\diksh\Desktop\git_intro> git log --all --decorate --oneline --graph
* 8723fad (HEAD -> greeter) sheldon greeter
* 946eaa0 (master, gitlearning) greet by name
* a03b79a Add file02.js
* d94f3fd added file01.js to project
PS C:\Users\diksh\Desktop\git_intro> git log --all --decorate --oneline --graph --color
* 8723fad (HEAD -> greeter) sheldon greeter
* 946eaa0 (master, gitlearning) greet by name
* a03b79a Add file02.js
* d94f3fd added file01.js to project
PS C:\Users\diksh\Desktop\git_intro>    git checkout gitlearning
Switched to branch 'gitlearning'
PS C:\Users\diksh\Desktop\git_intro> git status
On branch gitlearning
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   file02.js

no changes added to commit (use "git add" and/or "git commit -a")
PS C:\Users\diksh\Desktop\git_intro> git commit -m "checking"
On branch gitlearning
Changes not staged for commit:
        modified:   file02.js

no changes added to commit
PS C:\Users\diksh\Desktop\git_intro> git add file02.js
PS C:\Users\diksh\Desktop\git_intro> git commit -m "checking"
[gitlearning bdd1750] checking
 1 file changed, 3 insertions(+)
PS C:\Users\diksh\Desktop\git_intro> git log
commit bdd1750207542e2ac723260881cfbbe40d956ef2 (HEAD -> gitlearning)
Author: diksha mittal <dikshamittal21297@gmail.com>
Date:   Mon Jun 17 22:00:30 2019 +0530

    checking

commit 946eaa0ed376f3f9449e9a9240683fe564382e03 (master)
Author: diksha mittal <dikshamittal21297@gmail.com>
Date:   Mon Jun 17 20:51:12 2019 +0530

    greet by name

commit a03b79a3ab2d12a1a4ef377a27e1fa1f20c6d2a9
Author: diksha mittal <dikshamittal21297@gmail.com>
Date:   Mon Jun 17 15:53:25 2019 +0530

    Add file02.js

commit d94f3fdaf66185b6696567baf9dad8b59c9082ae
Author: diksha mittal <dikshamittal21297@gmail.com>
Date:   Mon Jun 17 15:44:17 2019 +0530

    added file01.js to project
PS C:\Users\diksh\Desktop\git_intro> git checkout greeter
Switched to branch 'greeter'
PS C:\Users\diksh\Desktop\git_intro> git add file02.js
PS C:\Users\diksh\Desktop\git_intro> git commit -m "hgbvu"
[greeter 19c30c0] hgbvu
 1 file changed, 3 insertions(+), 1 deletion(-)
PS C:\Users\diksh\Desktop\git_intro> git status
On branch greeter
nothing to commit, working tree clean
PS C:\Users\diksh\Desktop\git_intro> git merge gitlearning
Auto-merging file02.js
CONFLICT (content): Merge conflict in file02.js
Automatic merge failed; fix conflicts and then commit the result.
PS C:\Users\diksh\Desktop\git_intro> git log
commit 19c30c08735f6e166170a90f4259d1b0fa2c5fb3 (HEAD -> greeter)
Author: diksha mittal <dikshamittal21297@gmail.com>
Date:   Mon Jun 17 22:01:38 2019 +0530

    hgbvu

commit 8723fad908650d4c1074c4256845a21ed31edaff
Author: diksha mittal <dikshamittal21297@gmail.com>
Date:   Mon Jun 17 21:04:31 2019 +0530

    sheldon greeter

commit 946eaa0ed376f3f9449e9a9240683fe564382e03 (master)
Author: diksha mittal <dikshamittal21297@gmail.com>
Date:   Mon Jun 17 20:51:12 2019 +0530

    greet by name

commit a03b79a3ab2d12a1a4ef377a27e1fa1f20c6d2a9
Author: diksha mittal <dikshamittal21297@gmail.com>
Date:   Mon Jun 17 15:53:25 2019 +0530

    Add file02.js

commit d94f3fdaf66185b6696567baf9dad8b59c9082ae
Author: diksha mittal <dikshamittal21297@gmail.com>
Date:   Mon Jun 17 15:44:17 2019 +0530

    added file01.js to project
PS C:\Users\diksh\Desktop\git_intro> git config --global alias.fulltree log --color --oneline --graph --decorate --all
usage: git config [<options>]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    --worktree            use per-worktree config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-regex]
    --get-all             get all values: key [value-regex]
    --get-regexp          get values for regexp: name-regex [value-regex]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value_regex]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-regex]
    --unset-all           remove all matches: name [value-regex]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    -e, --edit            open an editor
    --get-color           find the color configured: slot [default]
    --get-colorbool       find the color setting: slot [stdout-is-tty]

Type
    -t, --type <>         value is given this type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --path                value is a path (file or directory name)
    --expiry-date         value is an expiry date

Other
    -z, --null            terminate values with NUL byte
    --name-only           show variable names only
    --includes            respect include directives on lookup
    --show-origin         show origin of config (file, standard input, blob, command line)
    --default <value>     with --get, use default value when missing entry

PS C:\Users\diksh\Desktop\git_intro> git config --global alias.fulltree "log --color --oneline --graph --decorate --all"
PS C:\Users\diksh\Desktop\git_intro> git fulltree
* 19c30c0 (HEAD -> greeter) hgbvu
* 8723fad sheldon greeter
| * bdd1750 (gitlearning) checking
|/
* 946eaa0 (master) greet by name
* a03b79a Add file02.js
* d94f3fd added file01.js to project
PS C:\Users\diksh\Desktop\git_intro> git remote add origin https://github.com/Dikmit02/git_intro2.git
PS C:\Users\diksh\Desktop\git_intro> git push origin master
Enumerating objects: 10, done.
Counting objects: 100% (10/10), done.
Delta compression using up to 4 threads
Compressing objects: 100% (6/6), done.
Writing objects: 100% (10/10), 846 bytes | 18.00 KiB/s, done.
Total 10 (delta 0), reused 0 (delta 0)
To https://github.com/Dikmit02/git_intro2.git
 * [new branch]      master -> master
PS C:\Users\diksh\Desktop\git_intro> git push origin --all
Enumerating objects: 13, done.
Counting objects: 100% (13/13), done.
Delta compression using up to 4 threads
Compressing objects: 100% (10/10), done.
Writing objects: 100% (10/10), 885 bytes | 13.00 KiB/s, done.
Total 10 (delta 3), reused 0 (delta 0)
remote: Resolving deltas: 100% (3/3), done.
To https://github.com/Dikmit02/git_intro2.git
 * [new branch]      gitlearning -> gitlearning
 * [new branch]      greeter -> greeter
PS C:\Users\diksh\Desktop\git_intro>